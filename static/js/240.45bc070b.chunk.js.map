{"version":3,"file":"static/js/240.45bc070b.chunk.js","mappings":"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","sources":["components/common/chapter/titlechapter/index.jsx","hook/LoadingImg/index.js","helpers/scroll/index.js","components/common/container/index.jsx","components/common/InfoComponent/index.jsx","helpers/validate/index.jsx","components/common/dateInput/index.jsx","components/common/Input/index.jsx","components/common/select/index.jsx","components/component/ExOneApps/index.jsx","components/common/graph/index.jsx","components/common/graph/graphTwo/index.jsx","components/common/table/index.jsx","components/component/Result/index.jsx","helpers/math/index.jsx","components/page/Example1Page/index.jsx","components/container/Exaple1/index.jsx"],"sourcesContent":["import { Button } from '@mui/material';\r\nimport React from 'react';\r\nimport { useLoadingImg } from '../../../../hook/LoadingImg';\r\nimport IMG from '../../../../assets/imgs/bg.png';\r\nimport placeholder from '../../../../assets/imgs/pl.png';\r\nimport { scrollFrom } from '../../../../helpers/scroll';\r\n\r\nconst TitleChapter = ({ className, title, about }) => {\r\n  const loaded = useLoadingImg(IMG);\r\n\r\n  return (\r\n    <div\r\n      className={`${className}__hero hero`}\r\n      style={{ backgroundImage: `url(${loaded || placeholder}` }}\r\n    >\r\n      <div className={`${className}__hero-text hero__text`}>\r\n        <h3 className={`${className}__hero-subtitle hero__subtitle`}>\r\n          Курсовой проект\r\n        </h3>\r\n        <h1 className={`${className}__hero-title hero__title`}>{title}</h1>\r\n      </div>\r\n      <div className={`${className}__hero-about hero__about`}>{about}</div>\r\n      <div className={`${className}__hero-button hero__button`}>\r\n        <Button\r\n          onClick={() => {\r\n            scrollFrom();\r\n          }}\r\n          sx={{\r\n            width: {\r\n              desktop: `243px`,\r\n              laptop: `200px`,\r\n              table: `180px`,\r\n              mobile: `150px`,\r\n            },\r\n            height: {\r\n              desktop: `78px`,\r\n              laptop: `70px`,\r\n              table: `65px`,\r\n              mobile: `40px`,\r\n            },\r\n            border: `1px solid white`,\r\n            borderRadius: '192px',\r\n            color: 'white',\r\n            background: `linear-gradient(328.68deg, #98AA28 13.03%, #D6FF7E 120.61%)`,\r\n            boxShadow: `0px 34px 50px rgba(7, 63, 67, 0.07)`,\r\n          }}\r\n        >\r\n          <span className={`${className}__hero-button-text hero__button-text`}>\r\n            Начать\r\n          </span>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TitleChapter;\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport const useLoadingImg = (src) => {\r\n  const [sourse, setSourse] = useState(null);\r\n  useEffect(() => {\r\n    const img = new Image();\r\n    img.src = src;\r\n    img.onload = () => setSourse(src);\r\n  }, [src]);\r\n\r\n  return sourse;\r\n};\r\n","export const scrollFrom = () => {\r\n  const height = document.documentElement.getBoundingClientRect().height;\r\n  const elem = document.body.querySelector('[data-to=\"scroll\"]');\r\n\r\n  elem.scrollIntoView({ behavior: 'smooth' });\r\n};\r\n","import { Container } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst ContainerCustom = ({ children }) => {\r\n  return (\r\n    <Container\r\n      sx={{\r\n        width: {\r\n          desktop: `1140px`,\r\n          laptop: `960px`,\r\n          table: `720px`,\r\n          mobile: `100%`,\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContainerCustom;\r\n","import { Accordion, AccordionDetails, AccordionSummary } from '@mui/material';\r\nimport React from 'react';\r\nimport ContainerCustom from '../container';\r\n\r\nconst InfoComponent = ({ className, data }) => {\r\n  return (\r\n    <div\r\n      className={`${className}__info info`}\r\n      data-to=\"scroll\"\r\n    >\r\n      <ContainerCustom>\r\n        <div className={`${className}__info__block info__block`}>\r\n          <h2 className={`${className}__info__title  info__title title`}>\r\n            Основная информация\r\n          </h2>\r\n          <div className={`${className}__info-acc`}>\r\n            <Accordion>\r\n              <AccordionSummary>\r\n                <h2 className={`${className}__info-acc_title subtitle`}>\r\n                  Формула простых процентов\r\n                </h2>\r\n              </AccordionSummary>\r\n              <AccordionDetails className={`${className}__info-acc_text text`}>\r\n                Формула простых процентов применяется, если начисляемые на вклад\r\n                проценты причисляются к вкладу только в конце срока депозита или\r\n                вообще не причисляются, а переводятся на отдельный счет, т.е.\r\n                расчет простых процентов не предусматривает капитализации\r\n                процентов.\r\n              </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n              <AccordionSummary>\r\n                <h2 className={`${className}__info-acc_title subtitle`}>\r\n                  Формула сложных процентов\r\n                </h2>\r\n              </AccordionSummary>\r\n              <AccordionDetails className={`${className}__info-acc_text text`}>\r\n                Формула сложных процентов применяется, если начисление процентов\r\n                по вкладу, осуществляется через равные промежутки времени\r\n                (ежедневно, ежемесячно, ежеквартально) а начисленные проценты\r\n                причисляются к вкладу, т. е. расчет сложных процентов\r\n                предусматривает капитализацию процентов (начисление процентов на\r\n                проценты).\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </div>\r\n        </div>\r\n      </ContainerCustom>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoComponent;\r\n","import * as yup from 'yup';\r\nexport const validateEx1 = yup.object().shape({\r\n  sum: yup\r\n    .number()\r\n    .typeError('Должен быть число')\r\n    .required('Объязательный элемент'),\r\n  percent: yup\r\n    .number()\r\n    .typeError('Должен быть число')\r\n    .required('Объязательный элемент'),\r\n  date: yup\r\n    .date()\r\n    .typeError('Должен быть дата')\r\n    .required('Объязательный элемент'),\r\n  month: yup\r\n    .number()\r\n    .typeError('Должен быть число')\r\n    .max(100, 'Максимально число 100')\r\n    .required('Объязательный элемент'),\r\n  period: yup\r\n    .string()\r\n    .typeError('Должен быть строкой')\r\n    .required('Объязательный элемент'),\r\n});\r\n","import { TextField } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst DateInput = ({ id, state, setState, name, error, helperText }) => {\r\n  return (\r\n    <>\r\n      <TextField\r\n        label=\"Начало срока\"\r\n        type=\"date\"\r\n        id={id}\r\n        name={name}\r\n        fullWidth\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        onChange={setState}\r\n        value={state}\r\n        error={error}\r\n        helperText={helperText}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateInput;\r\n","import { TextField } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst InputCustome = ({\r\n  state,\r\n  setState,\r\n  text,\r\n  id,\r\n  name,\r\n  error,\r\n  helperText,\r\n}) => {\r\n  return (\r\n    <>\r\n      <TextField\r\n        name={name}\r\n        id={id}\r\n        label={text}\r\n        value={state}\r\n        onChange={setState}\r\n        fullWidth\r\n        error={error}\r\n        helperText={helperText}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputCustome;\r\n","import { FormControl, MenuItem, Select } from '@mui/material';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport React from 'react';\r\n\r\nconst SelectCustome = ({\r\n  month,\r\n  name,\r\n  id,\r\n  state,\r\n  setState,\r\n  error,\r\n  helperText,\r\n}) => {\r\n  const content = [\r\n    {\r\n      value: 1,\r\n      text: 'В конце срока',\r\n      type: 'end',\r\n    },\r\n    {\r\n      value: +month ?? 0,\r\n      text: 'Раз в месяц',\r\n      type: 'month',\r\n    },\r\n    {\r\n      value: Math.floor(month / 12) * 12,\r\n      text: 'Раз в год',\r\n      type: 'year',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <FormControl fullWidth>\r\n      <InputLabel\r\n        id={id}\r\n        error={error}\r\n      >\r\n        Периодичность выплат\r\n      </InputLabel>\r\n      <Select\r\n        name={name}\r\n        label=\"Age\"\r\n        id={id}\r\n        value={state}\r\n        onChange={setState}\r\n        error={error}\r\n      >\r\n        {content.map((el, index, arr) => (\r\n          <MenuItem\r\n            key={index}\r\n            value={el.type}\r\n          >\r\n            {el.text}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SelectCustome;\r\n","import { Button } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport { validateEx1 } from '../../../helpers/validate';\r\nimport ContainerCustom from '../../common/container';\r\nimport DateInput from '../../common/dateInput';\r\nimport InputCustome from '../../common/Input';\r\nimport SelectCustome from '../../common/select';\r\n\r\nconst ExOneApps = ({ className, setState }) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      sum: '',\r\n      percent: '',\r\n      date: new Date(),\r\n      month: '',\r\n      period: '',\r\n    },\r\n    validateOnChange: true,\r\n    validationSchema: validateEx1,\r\n    onSubmit: (value) => {\r\n      setState({\r\n        ...value,\r\n        period: {\r\n          type: value.period,\r\n          value:\r\n            value.period === 'end'\r\n              ? 1\r\n              : value.period === 'month'\r\n              ? +value.month ?? 0\r\n              : Math.floor(+value.month / 12) * 12,\r\n        },\r\n      });\r\n    },\r\n  });\r\n  return (\r\n    <div className={`${className}__app1 app1`}>\r\n      <ContainerCustom>\r\n        <div className={`${className}__app1-content app1__content`}>\r\n          <h2 className={`${className}__app1-title app1__title title`}>\r\n            Калькулятор доходности вкладов\r\n          </h2>\r\n          <form\r\n            className={`${className}__app1-form app1__form `}\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <div className={`${className}__app1-form app1__form-el `}>\r\n              <InputCustome\r\n                text={'Сумма вклада'}\r\n                id={'sum'}\r\n                name={'sum'}\r\n                state={formik.values.sum}\r\n                setState={formik.handleChange}\r\n                error={formik.touched.sum && Boolean(formik.errors.sum)}\r\n                helperText={formik.touched.sum && formik.errors.sum}\r\n              />\r\n            </div>\r\n            <div className={`${className}__app1-form app1__form-el `}>\r\n              <InputCustome\r\n                text={'Срок размещения(Колличество месяцев)'}\r\n                id={'month'}\r\n                name={'month'}\r\n                state={formik.values.month}\r\n                setState={formik.handleChange}\r\n                error={formik.touched.month && Boolean(formik.errors.month)}\r\n                helperText={formik.touched.month && formik.errors.month}\r\n              />\r\n            </div>\r\n            <div className={`${className}__app1-form app1__form-el `}>\r\n              <InputCustome\r\n                text={'Процентная ставка %'}\r\n                id={'percent'}\r\n                name={'percent'}\r\n                state={formik.values.percent}\r\n                setState={formik.handleChange}\r\n                error={formik.touched.percent && Boolean(formik.errors.percent)}\r\n                helperText={formik.touched.percent && formik.errors.percent}\r\n              />\r\n            </div>\r\n            <div className={`${className}__app1-form app1__form-el `}>\r\n              <DateInput\r\n                id={'date'}\r\n                name={'date'}\r\n                state={formik.values.date}\r\n                setState={formik.handleChange}\r\n                error={formik.touched.date && Boolean(formik.errors.date)}\r\n                helperText={formik.touched.date && formik.errors.date}\r\n              />\r\n            </div>\r\n            <div className={`${className}__app1-form app1__form-el `}>\r\n              <SelectCustome\r\n                text={'Периодичность выплат'}\r\n                month={formik.values.month}\r\n                id={'period'}\r\n                name={'period'}\r\n                state={formik.values.period}\r\n                setState={formik.handleChange}\r\n                error={formik.touched.period && Boolean(formik.errors.period)}\r\n                helperText={formik.touched.period && formik.errors.period}\r\n              />\r\n            </div>\r\n            <div className={`${className}__app1-form app1__form-el `}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                fullWidth\r\n              >\r\n                Рассчитать\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </ContainerCustom>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExOneApps;\r\n","import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Filler,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Filler,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst GraphCompanentOne = ({ result }) => {\r\n  if (result.show) {\r\n    const options = {\r\n      //   responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          position: 'top',\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Расчет депозита',\r\n        },\r\n      },\r\n    };\r\n\r\n    const labels = result.period;\r\n\r\n    const data = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          fill: true,\r\n          label: 'Итоговая сумма',\r\n          data: labels.map((_, index) => result.all[index]),\r\n          borderColor: 'rgb(53, 162, 235)',\r\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        },\r\n      ],\r\n    };\r\n    return (\r\n      <>\r\n        <Line\r\n          options={options}\r\n          data={data}\r\n        />\r\n      </>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default GraphCompanentOne;\r\n","import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst GraphCompanentTwo = ({ result }) => {\r\n  if (result.show) {\r\n    const options = {\r\n      maintainAspectRatio: false,\r\n      //   responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: 'top',\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Расчет депозита',\r\n        },\r\n      },\r\n    };\r\n\r\n    const labels = result.period;\r\n\r\n    const data = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          fill: true,\r\n          label: 'Итоговая сумма',\r\n          data: labels.map((_, index) => result.depozit[index]),\r\n          borderColor: 'rgb(53, 162, 235)',\r\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        },\r\n      ],\r\n    };\r\n    return (\r\n      <>\r\n        <Bar\r\n          options={options}\r\n          data={data}\r\n        />\r\n      </>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default GraphCompanentTwo;\r\n","// import { DataGrid } from '@mui/x-data-grid';\r\n\r\n// const TableCustome = ({ state = [] }) => {\r\n//   const [data, setData] = useState([]);\r\n//   useEffect(() => {\r\n//     if (Object.entries(state).length) {\r\n//       setData(\r\n//         state?.all?.map((el, index) => {\r\n//           return {\r\n//             id: index,\r\n//             date: state?.period[index],\r\n//             percent: state?.depozit[index],\r\n//             sum: el,\r\n//           };\r\n//         })\r\n//       );\r\n//     } else {\r\n//       setData([]);\r\n//     }\r\n//   }, [state]);\r\n\r\n//   console.log([...data]);\r\n//   return (\r\n//     <>\r\n//       <DataGrid\r\n//         rows={[...data]}\r\n//         columns={[\r\n//           { field: 'id', headerName: 'id' },\r\n//           { field: 'date', headerName: 'Дата' },\r\n//           {\r\n//             field: 'percent',\r\n//             headerName: 'Начислено процентов',\r\n//           },\r\n//           {\r\n//             field: 'sum',\r\n//             headerName: 'Вклад пополнен',\r\n//           },\r\n//         ]}\r\n//       />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default TableCustome;\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { TableFooter, TablePagination } from '@mui/material';\r\n\r\nexport default function SpanningTable({ state = [] }) {\r\n  const [data, setData] = useState([]);\r\n  const [sum, setSum] = useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  useEffect(() => {\r\n    if (Object.entries(state).length) {\r\n      setData(\r\n        state?.all?.map((el, index) => {\r\n          return {\r\n            id: index,\r\n            date: state?.period[index],\r\n            percent: state?.depozit[index],\r\n            sum: el,\r\n          };\r\n        })\r\n      );\r\n      setSum(state.depozit);\r\n    } else {\r\n      setData([]);\r\n    }\r\n  }, [state]);\r\n\r\n  const sumResult = (sum) => {\r\n    if (sum.length) {\r\n      return sum.reduce((acc, el) => acc + el, 0);\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  // const emptyRows =\r\n  //   page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table\r\n        sx={{ minWidth: 700 }}\r\n        aria-label=\"spanning table\"\r\n      >\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>id</TableCell>\r\n            <TableCell>Дата</TableCell>\r\n            <TableCell>Начислено процентов</TableCell>\r\n            <TableCell>Вклад пополнен</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{row.id}</TableCell>\r\n                <TableCell>{row.date}</TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    color: 'success.main',\r\n                  }}\r\n                >\r\n                  {row.percent ? `+${row.percent}` : 0}\r\n                </TableCell>\r\n                <TableCell>{row.sum}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Итог:</TableCell>\r\n            <TableCell align=\"right\">{sumResult(sum)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={4}\r\n              count={data.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              labelRowsPerPage={'Колличество:'}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { TableHead } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { Chart } from 'chart.js';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport { mathResult } from '../../../helpers/math';\r\nimport ContainerCustom from '../../common/container';\r\nimport GraphCompanentOne from '../../common/graph';\r\nimport GraphCompanentTwo from '../../common/graph/graphTwo';\r\nimport TableCustome from '../../common/table';\r\n\r\nconst ResultComponent = ({ state }) => {\r\n  const [result, setResult] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setResult(mathResult(state));\r\n  }, [state]);\r\n\r\n  return (\r\n    <div>\r\n      <ContainerCustom>\r\n        {/* <pre>{JSON.stringify(state, null, 2)}</pre>\r\n        <pre>{JSON.stringify(mathResult(state), null, 2)}</pre> */}\r\n        <div style={{ width: '100%', marginBottom: '100px' }}>\r\n          <TableCustome state={result} />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'grid ',\r\n            gridTemplateColumns: '1fr 1fr',\r\n            gridAutoRows: `400px`,\r\n          }}\r\n        >\r\n          <div>\r\n            {' '}\r\n            <GraphCompanentOne result={result} />\r\n          </div>\r\n\r\n          <div>\r\n            <GraphCompanentTwo result={result} />\r\n          </div>\r\n        </div>\r\n      </ContainerCustom>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultComponent;\r\n","export const mathResult = (state) => {\r\n  try {\r\n    if (state?.period?.type === 'end') {\r\n      let now = new Date(state.date);\r\n      const result = new Array(+state.month)\r\n        .fill(1)\r\n        .map(() => {\r\n          const day = new Date(\r\n            now.getFullYear(),\r\n            now.getMonth() + 1,\r\n            0\r\n          ).getDate();\r\n          const resultMas = Number(\r\n            (+state.sum * +state.percent * day) / 365 / 100\r\n          );\r\n          now.setMonth(now.getMonth() + 1);\r\n          return resultMas;\r\n        })\r\n        .reduce((acc, el) => acc + el, 0);\r\n      return {\r\n        all: [+state.sum, parseFloat(Number(+state.sum + result).toFixed(2))],\r\n        depozit: [0, parseFloat(Number(result).toFixed(2))],\r\n        period: [\r\n          new Date(+state.date).toLocaleDateString(),\r\n          now.toLocaleDateString(),\r\n        ],\r\n        show: true,\r\n      };\r\n    }\r\n    if (state?.period?.type === 'month') {\r\n      let now = new Date(state.date);\r\n      let addNow = new Date(state.date);\r\n      const masdate = [];\r\n      const result = new Array(+state.month).fill(1).map(() => {\r\n        const day = new Date(\r\n          now.getFullYear(),\r\n          now.getMonth() + 1,\r\n          0\r\n        ).getDate();\r\n        const resultMas = parseFloat(\r\n          Number((+state.sum * +state.percent * day) / 365 / 100).toFixed(2)\r\n        );\r\n        now.setMonth(now.getMonth() + 1);\r\n        addNow = now.setMonth(now.getMonth());\r\n        masdate.push(addNow);\r\n        return resultMas;\r\n      });\r\n\r\n      return {\r\n        all: [\r\n          state.sum,\r\n          ...result.reduce((acc, el, index) => {\r\n            if (index === 0) {\r\n              acc.push(parseFloat(Number(el + +state.sum).toFixed(2)));\r\n              return acc;\r\n            } else {\r\n              acc.push(parseFloat(Number(acc[index - 1] + +el).toFixed(2)));\r\n              return acc;\r\n            }\r\n          }, []),\r\n        ],\r\n        depozit: [0, ...result],\r\n        period: [\r\n          new Date(state.date).toLocaleDateString(),\r\n          ...masdate.map((el) => {\r\n            console.log();\r\n            return new Date(el).toLocaleDateString();\r\n          }),\r\n        ],\r\n        show: true,\r\n      };\r\n    }\r\n    if (state?.period?.type === 'year') {\r\n      let now = new Date(state.date);\r\n      const result = new Array(+state.month)\r\n        .fill(1)\r\n        .map(() => {\r\n          const day = new Date(\r\n            now.getFullYear(),\r\n            now.getMonth() + 1,\r\n            0\r\n          ).getDate();\r\n          const resultMas = (+state.sum * +state.percent * day) / 365 / 100;\r\n          now.setMonth(now.getMonth() + 1);\r\n          return resultMas;\r\n        })\r\n        .reduce((acc, el) => acc + el, 0);\r\n      return {\r\n        all: [+state.sum, parseFloat(Number(+state.sum + result).toFixed(2))],\r\n        depozit: [0, parseFloat(Number(result).toFixed(2))],\r\n        period: [\r\n          new Date(state.date).toLocaleDateString(),\r\n          now.toLocaleDateString(),\r\n        ],\r\n        show: true,\r\n      };\r\n    }\r\n    return {};\r\n  } catch (e) {\r\n    console.error(e);\r\n    return {};\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport TitleChapter from '../../common/chapter/titlechapter';\r\nimport InfoComponent from '../../common/InfoComponent';\r\nimport ExOneApps from '../../component/ExOneApps';\r\nimport ResultComponent from '../../component/Result';\r\n\r\nconst ExampleOnePage = () => {\r\n  const [state, setState] = useState({\r\n    sum: 10000,\r\n    percent: 13,\r\n    date: '2022-11-15',\r\n    month: 12,\r\n    period: {\r\n      value: 12,\r\n      type: 'year',\r\n    },\r\n  });\r\n  return (\r\n    <div className=\"ex1\">\r\n      <TitleChapter\r\n        className={'ex1'}\r\n        title={'Реализация №1'}\r\n        about={'Рассчет итоговой суммы срочного вклада'}\r\n      />\r\n      <InfoComponent\r\n        className={'ex1'}\r\n        setState={setState}\r\n        data={'scroll'}\r\n      />\r\n      <ExOneApps setState={setState} />\r\n      <ResultComponent state={state} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExampleOnePage;\r\n","import React from 'react';\r\nimport ExampleOnePage from '../../page/Example1Page';\r\n\r\nconst ExapleContainer = () => {\r\n  return (\r\n    <>\r\n      <ExampleOnePage />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExapleContainer;\r\n"],"names":["className","title","about","loaded","src","useState","sourse","setSourse","useEffect","img","Image","onload","useLoadingImg","IMG","style","backgroundImage","Button","onClick","document","documentElement","getBoundingClientRect","height","body","querySelector","scrollIntoView","behavior","sx","width","desktop","laptop","table","mobile","border","borderRadius","color","background","boxShadow","children","data","Accordion","AccordionSummary","AccordionDetails","validateEx1","yup","shape","sum","typeError","required","percent","date","month","max","period","id","state","setState","name","error","helperText","TextField","label","type","fullWidth","InputLabelProps","shrink","onChange","value","text","content","Math","floor","FormControl","InputLabel","Select","map","el","index","arr","MenuItem","formik","useFormik","initialValues","Date","validateOnChange","validationSchema","onSubmit","handleSubmit","Input","values","handleChange","touched","Boolean","errors","variant","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Filler","Tooltip","Legend","result","show","labels","datasets","fill","_","all","borderColor","backgroundColor","options","maintainAspectRatio","plugins","legend","position","display","BarElement","depozit","SpanningTable","setData","setSum","React","page","setPage","rowsPerPage","setRowsPerPage","Object","entries","length","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","TableCell","TableBody","slice","row","colSpan","align","reduce","acc","sumResult","TableFooter","TablePagination","rowsPerPageOptions","count","labelRowsPerPage","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","setResult","now","Array","day","getFullYear","getMonth","getDate","resultMas","Number","setMonth","parseFloat","toFixed","toLocaleDateString","addNow","masdate","push","console","log","e","mathResult","marginBottom","gridTemplateColumns","gridAutoRows","Result"],"sourceRoot":""}